<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>WalkRight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initialize
grav = 0.8;
hsp = 0;
vsp = 0;
jumpspeed = 12;
movespeed = 8;
move = 0;
jmpflag = 0;
old = 0;
lives = 2;
sprite_index = StopRight;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//get inputs
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_up);

//set imagespeed
image_speed = 0.5;

//actions
if (move != 0)
    old = move;

image_speed = 0.2;

// -1 if left, 1 if right
move = key_right + key_left;
hsp = move * movespeed;
hsp = move * movespeed;

//Sprite Change while walking
if (jmpflag == 0)
{
    if (move == 0)
    {
        if (old &lt; 0)
          sprite_index = StopLeft;
        if (old &gt; 0)
            sprite_index = StopRight;   
    }
    else if (move &gt; 0)
        sprite_index = WalkRight;
    else
        sprite_index = WalkLeft;
}
//

//jumping sprite
jumpdir = 0;
jmpflag = 0;
if (move != 0)
    jumpdir = move;
else
    jumpdir = old;
if (!place_meeting(x, y + 2, oWall))
{
    jmpflag = 1;
    move = 0;
    if (jumpdir &gt; 0)
    sprite_index = JumpRight;
    if (jumpdir &lt; 0)
    sprite_index = JumpLeft;
}
//

//falling speed
if (vsp &lt; 10) vsp += grav;

//jump
if (place_meeting(x, y+1, oWall))
{
    vsp = key_jump * -jumpspeed;
}

//horizontal collision
if (place_meeting(x+hsp, y, oWall))
{
    while (!place_meeting(x+sign(hsp), y, oWall))
    {
        x += sign(hsp);
        if (place_meeting(x+sign(hsp), y, oWall) &amp;&amp; !place_meeting(x+sign(hsp), y+(10*sign(vsp)), oWall))
        {
            
            y += sign(vsp);
        }
    }
    hsp = 0;
}
x += hsp;

//vertical collision
if (place_meeting(x, y+vsp, oWall))
{
    while (!place_meeting(x,y+sign(vsp), oWall))
    {
        y += sign(vsp);
    }
    vsp = 0;
}

// Sprite saut

y += vsp;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="6">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
